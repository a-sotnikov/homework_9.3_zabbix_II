---
- name: Install zabbix agents
  hosts: all
  remote_user: admin
  become: true
  tags:
    - "Done"

  pre_tasks:
    - name: Download repo installer
      ansible.builtin.apt:
        deb: "https://repo.zabbix.com/zabbix/6.0/ubuntu/pool/main/z/zabbix-release/zabbix-release_6.0-4%2Bubuntu22.04_all.deb"
        state: present

  tasks:
    - name: Install agents
      ansible.builtin.apt:
        package:
          - zabbix-agent
        update_cache: true

    - name: Update config
      ansible.builtin.lineinfile:
        path: /etc/zabbix/zabbix_agentd.conf
        regexp: ^Server=127\.0\.0\.1.*
        line: Server=127.0.0.1, {{ hostvars[groups['zabbix_server'][0]]['ansible_facts']['default_ipv4']['address'] }}
        state: present
        owner: 'zabbix'
        group: 'zabbix'
      notify: Restart_agent

  handlers:
    - name: Restart_agent
      ansible.builtin.systemd:
        service: 'zabbix-agent'
        state: restarted
        enabled: true

- name: Install server
  hosts: zabbix_server
  remote_user: admin
  become: true
  gather_facts: false
  tags:
    - "Undone"

  tasks:

    - name: Install server, web_GUI and DB
      ansible.builtin.apt:
        package:
          - zabbix-server-pgsql
          - zabbix-frontend-php
          - php8.1-pgsql
          - zabbix-nginx-conf
          - zabbix-sql-scripts
          - postgresql
        state: present

    - name: Install tools
      ansible.builtin.apt:
        package:
          - libpq-dev
          - python3-pip
          - acl

    - name: Install psycopg2
      ansible.builtin.pip:
        name: psycopg2-binary

    - name: Create user for db
      become_user: postgres
      become: true
      community.general.postgresql_user:
        name: zabbix
        password: "{{ DB_PASS }}"

    - name: Create database
      become_user: postgres
      community.general.postgresql_db:
        name: zabbix
        owner: zabbix

    - name: Check is schema script unpacked
      ansible.builtin.stat:
        path: "/usr/share/zabbix-sql-scripts/postgresql/server.sql"
      register: unp_script

    - name: Extract schema script
      ansible.builtin.shell: "zcat /usr/share/zabbix-sql-scripts/postgresql/server.sql.gz > /usr/share/zabbix-sql-scripts/postgresql/server.sql"
      when: not unp_script.stat.exists
      register: unp_output
      changed_when: unp_output.rc != 0

    - name: Set permissions
      ansible.builtin.file:
        path: '/usr/share/zabbix-sql-scripts/postgresql/server.sql'
        owner: postgres
        group: postgres
        mode: '744'

    - name: Install schema
      become_user: zabbix
      tags:
        - "Done"
      community.postgresql.postgresql_script:
        db: zabbix
        path: /usr/share/zabbix-sql-scripts/postgresql/server.sql
        login_user: zabbix
        login_password: "{{ DB_PASS }}"

    - name: Edit server.conf
      ansible.builtin.lineinfile:
        path: /etc/zabbix/zabbix_server.conf
        regexp: ^DBPassword=.*
        line: DBPassword={{ DB_PASS }}
        state: present
        owner: postgres
        group: postgres

    - name: Edit nginx conf
      ansible.builtin.lineinfile:
        path: /etc/zabbix/nginx.conf
        regexp: "{{ item.regexp }}"
        line: "{{ item.line }}"
        state: present
      loop:
        - { regexp: '.*listen.*', line: "\tlisten 8080;" }
        - { regexp: '.*server_name.*', line: "\tserver_name _;" }

    - name: Restart and enable
      ansible.builtin.systemd:
        service: "{{ item }}"
        state: restarted
        enabled: true
      loop:
        - zabbix-server
        - nginx
        - php8.1-fpm
